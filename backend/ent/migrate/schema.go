// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// MedicalEquipmentsColumns holds the columns for the "medical_equipments" table.
	MedicalEquipmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// MedicalEquipmentsTable holds the schema information for the "medical_equipments" table.
	MedicalEquipmentsTable = &schema.Table{
		Name:        "medical_equipments",
		Columns:     MedicalEquipmentsColumns,
		PrimaryKey:  []*schema.Column{MedicalEquipmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MedicalTypesColumns holds the columns for the "medical_types" table.
	MedicalTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// MedicalTypesTable holds the schema information for the "medical_types" table.
	MedicalTypesTable = &schema.Table{
		Name:        "medical_types",
		Columns:     MedicalTypesColumns,
		PrimaryKey:  []*schema.Column{MedicalTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PhysiciansColumns holds the columns for the "physicians" table.
	PhysiciansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
	}
	// PhysiciansTable holds the schema information for the "physicians" table.
	PhysiciansTable = &schema.Table{
		Name:        "physicians",
		Columns:     PhysiciansColumns,
		PrimaryKey:  []*schema.Column{PhysiciansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SystemequipmentsColumns holds the columns for the "systemequipments" table.
	SystemequipmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "addedtime", Type: field.TypeTime},
		{Name: "stock", Type: field.TypeInt},
		{Name: "medical_equipment_systemequipment", Type: field.TypeInt, Nullable: true},
		{Name: "medical_type_systemequipment", Type: field.TypeInt, Nullable: true},
		{Name: "physician_systemequipment", Type: field.TypeInt, Nullable: true},
	}
	// SystemequipmentsTable holds the schema information for the "systemequipments" table.
	SystemequipmentsTable = &schema.Table{
		Name:       "systemequipments",
		Columns:    SystemequipmentsColumns,
		PrimaryKey: []*schema.Column{SystemequipmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "systemequipments_medical_equipments_systemequipment",
				Columns: []*schema.Column{SystemequipmentsColumns[3]},

				RefColumns: []*schema.Column{MedicalEquipmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "systemequipments_medical_types_systemequipment",
				Columns: []*schema.Column{SystemequipmentsColumns[4]},

				RefColumns: []*schema.Column{MedicalTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "systemequipments_physicians_systemequipment",
				Columns: []*schema.Column{SystemequipmentsColumns[5]},

				RefColumns: []*schema.Column{PhysiciansColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MedicalEquipmentsTable,
		MedicalTypesTable,
		PhysiciansTable,
		SystemequipmentsTable,
	}
)

func init() {
	SystemequipmentsTable.ForeignKeys[0].RefTable = MedicalEquipmentsTable
	SystemequipmentsTable.ForeignKeys[1].RefTable = MedicalTypesTable
	SystemequipmentsTable.ForeignKeys[2].RefTable = PhysiciansTable
}
