{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/medicalequipments": {
            "get": {
                "description": "list medicalequipment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List medicalequipment entities",
                "operationId": "list-medicalequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.MedicalEquipment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create medicalequipment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create medicalequipment",
                "operationId": "create-medicalequipment",
                "parameters": [
                    {
                        "description": "Medicalequipment entity",
                        "name": "medicalequipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalEquipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalEquipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/medicalequipments/{id}": {
            "get": {
                "description": "get medicalequipment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a medicalequipment entity by ID",
                "operationId": "get-medicalequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medicalequipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalEquipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update medicalequipment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a medicalequipment entity by ID",
                "operationId": "update-medicalequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medicalequipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Medicalequipment entity",
                        "name": "medicalequipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalEquipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalEquipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get medicalequipment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a medicalequipment entity by ID",
                "operationId": "delete-medicalequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medicalequipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/medicaltypes": {
            "get": {
                "description": "list medicaltype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List medicaltype entities",
                "operationId": "list-medicaltype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.MedicalType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create medicaltype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create medicaltype",
                "operationId": "create-medicaltype",
                "parameters": [
                    {
                        "description": "Medicaltype entity",
                        "name": "medicaltype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/medicaltypes/{id}": {
            "get": {
                "description": "get medicaltype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a medicaltype entity by ID",
                "operationId": "get-medicaltype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MedicalType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update medicaltype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a medicaltype entity by ID",
                "operationId": "update-medicaltype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medicaltype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Medicaltype entity",
                        "name": "medicaltype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.MedicalType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get medicaltype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a medicaltype entity by ID",
                "operationId": "delete-medicaltype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medicaltype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/physicians": {
            "get": {
                "description": "list physician entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List physician entities",
                "operationId": "list-physician",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Physician"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create physician",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create physician",
                "operationId": "create-physician",
                "parameters": [
                    {
                        "description": "Physician entity",
                        "name": "physician",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Physician"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Physician"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/physicians/{id}": {
            "get": {
                "description": "get physician by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a physician entity by ID",
                "operationId": "get-physician",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physician ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Physician"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update physician by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a physician entity by ID",
                "operationId": "update-physician",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physician ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Physician entity",
                        "name": "physician",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Physician"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Physician"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get physician by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a physician entity by ID",
                "operationId": "delete-physician",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physician ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/systemequipments": {
            "get": {
                "description": "list systemequipment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List systemequipment entities",
                "operationId": "list-systemequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Systemequipment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create systemequipment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create systemequipment",
                "operationId": "create-systemequipment",
                "parameters": [
                    {
                        "description": "Systemequipment entity",
                        "name": "systemequipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Systemequipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Systemequipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/systemequipments/{id}": {
            "get": {
                "description": "get systemequipment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a systemequipment entity by ID",
                "operationId": "get-systemequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Systemequipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Systemequipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update systemequipment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a systemequipment entity by ID",
                "operationId": "update-systemequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Systemequipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Systemequipment entity",
                        "name": "systemequipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Systemequipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Systemequipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get systemequipment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a systemequipment entity by ID",
                "operationId": "delete-systemequipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Systemequipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Systemequipment": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "type": "string"
                },
                "nameEquipmentID": {
                    "type": "integer"
                },
                "physicianID": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "typeEquipmentID": {
                    "type": "integer"
                }
            }
        },
        "ent.MedicalEquipment": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the MedicalEquipmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.MedicalEquipmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.MedicalEquipmentEdges": {
            "type": "object",
            "properties": {
                "systemequipment": {
                    "description": "Systemequipment holds the value of the systemequipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Systemequipment"
                    }
                }
            }
        },
        "ent.MedicalType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the MedicalTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.MedicalTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.MedicalTypeEdges": {
            "type": "object",
            "properties": {
                "systemequipment": {
                    "description": "Systemequipment holds the value of the systemequipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Systemequipment"
                    }
                }
            }
        },
        "ent.Physician": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PhysicianQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PhysicianEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PhysicianEdges": {
            "type": "object",
            "properties": {
                "systemequipment": {
                    "description": "Systemequipment holds the value of the systemequipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Systemequipment"
                    }
                }
            }
        },
        "ent.Systemequipment": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SystemequipmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SystemequipmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "stock": {
                    "description": "Stock holds the value of the \"stock\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.SystemequipmentEdges": {
            "type": "object",
            "properties": {
                "medicalequipment": {
                    "description": "Medicalequipment holds the value of the medicalequipment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.MedicalEquipment"
                },
                "medicaltype": {
                    "description": "Medicaltype holds the value of the medicaltype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.MedicalType"
                },
                "physician": {
                    "description": "Physician holds the value of the physician edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Physician"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}